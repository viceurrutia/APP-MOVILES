// Generated by view binder compiler. Do not edit!
package com.example.gameforgamers.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gameforgamers.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCartBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button btnDec;

  @NonNull
  public final Button btnRemove;

  @NonNull
  public final ImageView ivThumb;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvTitle;

  private ItemCartBinding(@NonNull LinearLayout rootView, @NonNull Button btnAdd,
      @NonNull Button btnDec, @NonNull Button btnRemove, @NonNull ImageView ivThumb,
      @NonNull TextView tvPrice, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnDec = btnDec;
    this.btnRemove = btnRemove;
    this.ivThumb = ivThumb;
    this.tvPrice = tvPrice;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_cart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnDec;
      Button btnDec = ViewBindings.findChildViewById(rootView, id);
      if (btnDec == null) {
        break missingId;
      }

      id = R.id.btnRemove;
      Button btnRemove = ViewBindings.findChildViewById(rootView, id);
      if (btnRemove == null) {
        break missingId;
      }

      id = R.id.ivThumb;
      ImageView ivThumb = ViewBindings.findChildViewById(rootView, id);
      if (ivThumb == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ItemCartBinding((LinearLayout) rootView, btnAdd, btnDec, btnRemove, ivThumb,
          tvPrice, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
